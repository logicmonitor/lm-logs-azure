{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "LM_Company_name": {
      "type": "string"
    },
    "LM_Access_Id": {
      "type": "string"
    },
    "LM_Access_Key": {
      "type": "string"
    },
    "LM_Bearer_Token": {
      "type": "String"
    },
    "Azure_Client_Id": {
      "type": "string"
    },
    "Include_Metadata_keys": {
      "type": "string"
    },
    "azure_region": {
      "type": "string"
    },
    "sourceCodeBranch": {
      "type": "string"
    }
  },
  "variables": {
    "logsFunctionAppName": "[concat('lm-logs','-',parameters('LM_Company_name'), '-', replace(parameters('azure_region'),' ',''))]",
    "eventhubNamespace": "[concat('lm-logs','-',parameters('LM_Company_name'), '-', replace(parameters('azure_region'),' ',''))]",
    "storage": "[toLower(concat(parameters('LM_Company_name'), replace(parameters('azure_region'),' ','')))]",
    "lmAppStorageAccounts": "[if(greater(length(variables('storage')) , 24), substring(variables('storage'), sub(length(variables('storage')) , 24), 24) , variables('storage'))]",
    "eventhubLogsName": "log-hub",
    "ConsumergroupsLogsName": "LMConsumerGroup",
    "functionServerfarms": "[concat(variables('eventhubNamespace'),'-service-plan')]",
    "listener": "listener",
    "sender": "sender",
    "lm_auth": "[concat('{ \"LM_ACCESS_ID\" : \"','parameters('LM_Access_Id')','\", \"LM_ACCESS_KEY\" : \"', 'parameters('LM_Access_Key')', '\", \"LM_BEARER_TOKEN\" : \"', 'parameters('LM_Bearer_Token')', '\" }' )]"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "name": "[variables('eventhubNamespace')]",
      "apiVersion": "2018-01-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "name": "[variables('lmAppStorageAccounts')]",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S",
        "capacity": 1
      },
      "kind": "Linux",
      "name": "[variables('functionServerfarms')]",
      "apiVersion": "2020-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "reserved": true
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp,linux",
      "name": "[variables('logsFunctionAppName')]",
      "apiVersion": "2020-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionServerfarms'))]",
        "reserved": true,
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "Java|11",
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "javaVersion": "11",
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "java"
            },
            {
              "name": "FUNCTIONS_WORKER_PROCESS_COUNT",
              "value": "1"
            },
            {
              "name": "FUNCTION_APP_EDIT_MODE",
              "value": "readwrite"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "[concat('https://github.com/logicmonitor/lm-logs-azure/raw/',parameters('sourceCodeBranch'),'/package/lm-logs-azure.zip')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('lmAppStorageAccounts'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('lmAppStorageAccounts')),'2019-06-01').keys[0].value)]"
            },
            {
              "name": "LogsEventHubConnectionString",
              "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('eventhubNamespace'),variables('eventhubLogsName'), variables('listener')), '2017-04-01').primaryConnectionString]"
            },
            {
              "name": "LM_COMPANY",
              "value": "[parameters('LM_Company_name')]"
            },
            {
              "name" : "LM_AUTH",
              "value" : "[variables('lm_auth')]"
            },
            {
              "name": "AzureClientID",
              "value": "[parameters('Azure_Client_Id')]"
            },
            {
              "name": "LogApiClientConnectTimeout",
              "value": "10000"
            },
            {
              "name": "LogApiClientReadTimeout",
              "value": "10000"
            },
            {
              "name": "LogApiClientDebugging",
              "value": "false"
            },
            {
              "name": "LogRegexScrub",
              "value": "<regex pattern>"
            },
            {
              "name": "APPLICATION_NAME",
              "value": "lm-logs-azure"
            },
            {
              "name": "Include_Metadata_keys",
              "value" : "[parameters('Include_Metadata_keys')]"
            },
            {
              "name": "LOG_LEVEL",
              "value" : "WARNING"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionServerfarms'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('lmAppStorageAccounts'))]",
        "[concat('Microsoft.EventHub/namespaces/', variables('eventhubNamespace'))]"
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "name": "[concat(variables('eventhubNamespace'), '/', variables('eventhubLogsName'))]",
      "apiVersion": "2017-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 1,
        "status": "Active"
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhubNamespace'))]"
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(variables('eventhubNamespace'), '/', variables('eventhubLogsName'),'/',variables('listener'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhubNamespace'), variables('eventhubLogsName'))]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhubNamespace'))]"
      ],
      "properties": {
        "rights": [
          "Listen"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(variables('eventhubNamespace'), '/', variables('eventhubLogsName'),'/',variables('sender'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhubNamespace'), variables('eventhubLogsName'))]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhubNamespace'))]"
      ],
      "properties": {
        "rights": [
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "name": "[concat(variables('eventhubNamespace'), '/', variables('eventhubLogsName'), '/', variables('ConsumergroupsLogsName'))]",
      "apiVersion": "2017-04-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhubNamespace'))]",
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhubNamespace'), variables('eventhubLogsName'))]"
      ]
    }
  ]
}
